// Copyright 2025 Proyectos y Sistemas de Mantenimiento SL (eProsima).
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

module calculator_base
{
    // This exception will be thrown when an operation result cannot be represented in a long
    exception OverflowException
    {
    };

    @nested
    interface Adder
    {
        // Returns the result of value1 + value2
        long addition(in long value1, in long value2) raises(OverflowException);
    };

    @nested
    interface Subtractor
    {
        // Returns the result of value1 - value2
        long subtraction(in long value1, in long value2) raises(OverflowException);
    };
};

interface Calculator : calculator_base::Adder, calculator_base::Subtractor
{
    // Returns the minimum and maximum representable values
    void representation_limits(out long min_value, out long max_value);
};
