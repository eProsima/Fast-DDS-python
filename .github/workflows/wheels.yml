name: Build

on: [push, pull_request]

jobs:
  build-fastdds-ubuntu:
    name: Build fast DDS library for ubuntu
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Cache build
        id: cache-build
        uses: actions/cache@v4
        with:
          path: install
          key: fastdds-ubuntu-${{ hashFiles('scripts/build_deps.sh') }}

      - name: Build fast DDS library
        if: steps.cache-build.outputs.cache-hit != 'true'
        run: |
          sudo apt install -y libasio-dev libtinyxml2-dev libssl-dev
          scripts/build_deps.sh

      - uses: actions/upload-artifact@v4
        with:
          name: fastdds-ubuntu
          path: ./install

  build-fastdds-linux:
    name: Build fast DDS library for manylinux2014
    runs-on: ubuntu-latest
    container: quay.io/pypa/manylinux2014_x86_64

    steps:
      - uses: actions/checkout@v4

      - name: Cache build
        id: cache-build
        uses: actions/cache@v4
        with:
          path: install
          key: fastdds-linux-${{ hashFiles('scripts/build_deps.sh') }}

      - name: Build fast DDS library
        if: steps.cache-build.outputs.cache-hit != 'true'
        run: |
          yum install -y tinyxml2-devel asio-devel
          scripts/build_deps.sh

      - uses: actions/upload-artifact@v4
        with:
          name: fastdds-linux
          path: ./install

  build-fastdds-windows:
    name: Build fast DDS library for windows
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4

      - name: Build fast DDS library
        if: false
        run: scripts\build_deps.bat

      - uses: actions/upload-artifact@v4
        with:
          path: ./wheelhouse/*.whl

  build-ubuntu-wheels:
    name: Build wheels for ubuntu
    runs-on: ubuntu-latest
    needs: build-fastdds-ubuntu

    steps:
      - uses: actions/checkout@v4

      - name: Download Library Build
        uses: actions/download-artifact@v4
        with:
          name: fastdds-ubuntu

      - name: Build wheels
        run: python -m build .

      - uses: actions/upload-artifact@v4
        with:
          path: ./wheelhouse/*.whl

  build-linux-wheels:
    name: Build wheels for linux
    runs-on: ubuntu-latest
    needs: build-fastdds-linux

    steps:
      - uses: actions/checkout@v4

      - name: Download Library Build
        uses: actions/download-artifact@v4
        with:
          name: fastdds-linux
          path: HelloLibrary/install

      - name: Build wheels
        env:
          CIBW_BEFORE_BUILD_LINUX: "scripts/build_deps.sh"
        uses: pypa/cibuildwheel@v2.19.2

      - uses: actions/upload-artifact@v4
        with:
          path: ./wheelhouse/*.whl

  build-windows-wheels:
    name: Build wheels for windows
    runs-on: windows-latest
    needs: build-fastdds-windows

    steps:
      - uses: actions/checkout@v4

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.19.2

      - uses: actions/upload-artifact@v4
        with:
          path: ./wheelhouse/*.whl
